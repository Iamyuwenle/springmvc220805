<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <context:component-scan base-package="com.le"/>

    <bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
        <property name="order" value="1"/>
    </bean>

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
        <property name="order" value="2"/>
    </bean>

    <!--第二种方式-->
    <!--/项目/img/任意层次目录的资源请求，都放行到/项目/img目录中去找资源-->
    <!--<mvc:resources mapping="/img/**" location="/img/"/>
    <mvc:annotation-driven/>-->

    <!--第三种方式-->
    <!--所有静态资源的请求,都交给tomcat容器中配置的DefaultServlet去处理,它会直接放行-->
    <mvc:default-servlet-handler/>
    <mvc:annotation-driven/>

    <!--==============================================================-->

    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="i18n"/>
    </bean>

    <mvc:view-controller path="/toLogin" view-name="login"/>

    <!--mvc:interceptors是配置SpringMVC的拦截器的，里面的一个bean就是一个拦截器-->
    <mvc:interceptors>
        <!--该拦截器负责拿到请求参数local，并解析Local对象-->
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">

        </bean>
    </mvc:interceptors>

    <!--配置SessionLocaleResolver的bean对象，它负责解析拦截器LocaleChangeInterceptor-->
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver"/>
</beans>